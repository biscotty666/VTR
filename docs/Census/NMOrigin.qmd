---
title: "New Mexico - Race and Country of Origin"
format: 
  gfm: default
  html: 
    toc: true
---

```{r, setup, include=FALSE}
knitr::opts_chunk$set(paged.print = FALSE)
```

```{r message=FALSE}
library(tidycensus)
library(tidyverse)
library(tigris)
library(patchwork)
options(tigris_use_cache = TRUE)
```

## Motivation

New Mexico's racial demographics are different from the US overall in a number of ways due to its unique history. Firstly, New Mexico has relatively large proportion of Native Americans. Secondly, Hispanics represent half of the population. Additionally, the breakdown of the Hispanic population is unlike any other, in that a significant portion do not identify with Latin America, but directly with Spain. Called "Hispanos" in New Mexicans were not strong supporters of the Mexican revolution, and only about 30 years later, New Mexico became part of the US under the Treaty of Hidalgo in 1948.

```{r}
NM_hisp <- sum(hisp[which(hisp$variable == "Hispanic"), "estimate"])
NM_tot <- NM_hisp + sum(hisp[which(hisp$variable == "Non_Hispanic"), "estimate"])
US_hisp <- sum(hisp_us[which(hisp_us$variable == "Hispanic"), "estimate"])
US_tot <- US_hisp + sum(hisp_us[which(hisp_us$variable == "Non_Hispanic"), "estimate"])
NM_hisp / NM_tot
US_hisp / US_tot
```

```{r}
nm_counties <- counties("NM")
```

### Variables of interest

2023

Place of Birth

same 2018

```         
Total B05002_001
Native B05002_002
Foreign Born B5002_013
```

Of Foreign born

```         
Total B05006_001
Europe B05006_002
Asia B05006_047
Eastern Asia B05006_048
China B05006_049
South Central Asia B05006_056
South Eastern Asia B05006_068 / 067
Vietnam B05006_077 / 076
Western Asia B05006_079 / 078
Africa B05006_095 /091
Oceania B05006_130 /117
Latin America B05006_139 / 124
Carribean B05006_140 / 125
Central America B05006_154 / 138
Mexico B05006_160 / 139
South America B05006_164 / 148
Canada B05006_177 / 161
```

Race

These variables include combinations of races

```         
White  B02001_002
Black  B02001_003
NativeAmerican  B02001_004
Asian  B02001_005

Non_Hispanic B03001_002
Hispanic B03001_003
HispanicMexican B03001_004
HispanicPR B03001_005
HispanicCuba B03001_006
HispanicDR B03001_007
HispanicCA B03001_008
HispanicSA B03001_016
Hispanic_Spaniard B03001_028
Hispanic_Spanish B03001_029
Hispanic_Spanish_American B03001_030
Hispanic_Other B03001_031
```

Measures

```         
Per capita income (inf adj) B19301_001
Median income B19326_001
Gini B19083_001
```

```{r}
pob_vars = c(
  Native = "B05002_002",
  ForeignBorn = "B05002_013"
)
```

```{r}
native_foreign <- get_acs(
  geography = "county",
  state = "NM",
  variables = pob_vars,
  summary_var = "B05002_001",
  year = 2023,
  cache_table = TRUE,
)
```

```{r}
native_foreign <- native_foreign |> left_join(
  nm_counties,
  by = "GEOID"
)  |> select(GEOID, variable, estimate, moe,
            county = NAME.y, summary_est, 
            geometry)
```

```{r}
ggplot(native_foreign, aes(x = variable, y = estimate, fill = county)) +
  geom_col() +
  labs(x = element_blank(),
       y = "Population",
       fill = "County",
       title = "NM Native vs Foreign-born Population",
       subtitle = "By County",
       caption = "acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  theme_bw()
```

```{r}
native_foreign_us <- get_acs(
  geography = "us",
  variables = pob_vars,
  summary_var = "B05002_001",
  year = 2023,
  cache_table = TRUE,
)
```

```{r}
ggplot(native_foreign_us, aes(x = variable, y = estimate)) +
  geom_col(fill = "navy") +
  labs(x = element_blank(),
       y = "Population",
       title = "US Native vs Foreign-born Population",
       subtitle = "By County",
       caption = "acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  theme_bw()
```

```{r}
orig_vars = c(
  Europe = "B05006_002",
  Asia = "B05006_047",
  Eastern_Asia = "B05006_048",
  China = "B05006_049",
  SC_Asia = "B05006_056",
  SE_Asia = "B05006_068",
  Vietnam = "B05006_077",
  Western_Asia = "B05006_079",
  Africa = "B05006_095",
  Oceania = "B05006_130",
  Latin_America = "B05006_139",
  Central_America = "B05006_154",
  Mexico = "B05006_160",
  South_America = "B05006_164",
  Canada = "B05006_177"
)
```

```{r}
foreign_origin <- get_acs(
  geography = "county",
  state = "NM",
  variables = orig_vars,
  summary_var = "B05006_001",
  year = 2023,
  cache_table = TRUE,
)
```

```{r}
foreign_origin <- foreign_origin |> left_join(
  nm_counties,
  by = "GEOID"
)  |> select(GEOID, variable, estimate, moe,
            county = NAME.y, summary_est, 
            geometry)
```

continents \<- c(

"Europe",

"Central_America",

"Asia",

"South_America",

"Africa",

"Oceania",

"Canada"

)

```{r}
continents <- c(
  "Europe",
  "Central_America",
  "Asia",
  "South_America",
  "Africa",
  "Oceania",
  "Canada"
)
```

```{r fig.height=5}
foreign_origin |> 
  filter(variable %in% continents) |> 
  mutate(variable = fct_reorder(variable, desc(estimate))) |> 
  ggplot(aes(x = variable, y = estimate, fill = county)) +
  geom_col() +
  labs(x = "Continent",
       y = "Population",
       fill = "County",
       title = "Origins of foreign-born New Mexico population",
       subtitle = "By Continent",
       caption = "acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```

```{r}
counties_top_8 <- foreign_origin |> 
  group_by(county) |> 
  summarise(est_sum = sum(estimate)) |> 
  slice_max(order_by = est_sum, n = 8) |>
  ungroup()
```

```{r}
counties_top_8
```

```{r}
foreign_origin |> 
  filter(variable %in% continents & county %in% counties_top_8$county) |> 
  mutate(county = fct_reorder(county, desc(summary_est))) |> 
  ggplot(aes(x = county, y = estimate, fill = variable)) +
  geom_col() +
  labs(x = "County",
       y = "Population",
       fill = "Continent",
       title = "Origins of foreign-born New Mexico population",
       subtitle = "Top 10 Counties by Population") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_viridis_d(labels = c("Africa", "Asia", "Canada", "Central America",
                               "Europe", "Oceania", "South America")) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```

```{r}
race_vars = c(
  White = "B02008_001",
  Black = "B02009_001",
  Native_American = "B02010_001",
  Asian = "B02011_001"
)

races <- get_acs(
  geography = "county",
  state = "NM",
  variables = race_vars,
  year = 2023,
  cache_table = TRUE) |> 
  left_join(
    nm_counties,
    by = "GEOID")  |> 
  select(GEOID, variable, estimate, moe,
            county = NAME.y,geometry)
```

```{r}
races |> 
  filter(county %in% counties_top_8$county) |> 
  mutate(county = fct_reorder(county, desc(estimate))) |> 
  ggplot(aes(x = county, y = estimate, fill = variable)) +
  geom_col() +
  labs(x = "County",
       y = "Population",
       fill = "Race",
       title = "New Mexico population by race",
       subtitle = "Top 10 Counties by Population",
       caption = "Source: census.gov acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_viridis_d(labels = c("Asian", "Black",
                                  "Native American", "White")) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```

```{r}
hisp_vars = c(
  Non_Hispanic = "B03001_002",
  Hispanic = "B03001_003",
  Hispanic_Mexican  = "B03001_004",
  Hispanic_CA = "B03001_008",
  Hispanic_Spaniard = "B03001_028",
  Hispanic_Spanish = "B03001_029",
  Hispanic_Spanish_American = "B03001_030",
  Hispanic_White = "B03002_013"
)

hispanic <- get_acs(
  geography = "county",
  state = "NM",
  variables = hisp_vars,
  summary_var = "B03001_001",
  year = 2023,
  cache_table = TRUE) |> 
  left_join(nm_counties,
            by = "GEOID") |> 
  select(GEOID, variable, estimate, moe,
            county = NAME.y, summary_est, 
            geometry)


hisp <- hispanic |> 
  pivot_wider(names_from = variable, values_from = estimate) |> 
  rowwise() |> 
  mutate(Hispanic_Spain = sum(c_across(Hispanic_Spaniard:Hispanic_Spanish_American), na.rm = TRUE)) |> 
  select(-c("Hispanic_Spaniard", "Hispanic_Spanish", "Hispanic_Spanish_American")) |> 
  pivot_longer(cols = Non_Hispanic:Hispanic_Spain, names_to = "variable", values_to = "estimate", values_drop_na = T) |> 
  group_by(county, variable) |> 
  mutate(pop = sum(estimate)) |> 
  distinct(county, variable, .keep_all = TRUE)
```

```{r}
hisp_us <- get_acs(
  geography = "us",
  variables = hisp_vars,
  summary_var = "B03001_001",
  year = 2023,
  cache_table = TRUE) |> 
  pivot_wider(names_from = variable, values_from = estimate) |> 
  rowwise() |> 
  mutate(Hispanic_Spain = sum(c_across(Hispanic_Spaniard:Hispanic_Spanish_American), na.rm = TRUE)) |> 
  select(-c("Hispanic_Spaniard", "Hispanic_Spanish", "Hispanic_Spanish_American")) |> 
  pivot_longer(cols = Non_Hispanic:Hispanic_Spain, names_to = "variable", values_to = "estimate", values_drop_na = T)|> 
  group_by(variable) |> 
  mutate(pop = sum(estimate)) |> 
  distinct(variable, .keep_all = TRUE) |> 
  mutate(percent = pop / summary_est)
hisp_us
```

```{r}
hisp |> 
  filter(county %in% counties_top_8$county & !(variable %in% c("Hispanic", "Non_Hispanic"))) |> 
  mutate(county = fct_reorder(county, desc(pop))) |> 
  ggplot(aes(x = county, y = pop, fill = factor(variable, levels = c("Hispanic_White", "Hispanic_Mexican", "Hispanic_Spain", "Hispanic_CA")))) +
  geom_col(position = "dodge") +
  labs(x = "County",
       y = "Population",
       fill = "Race",
       title = "Racial Identification of Hispanic Population",
       subtitle = "Top 10 Counties by Population",
       caption = "Source: census.gov acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_viridis_d(labels = c("White", "Mexicam", "Spanish", "Central American")) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```

```{r}
hispanic |> 
  filter(county %in% counties_top_8$county & variable %in% c("Hispanic", "Non_Hispanic")) |> 
  mutate(county = fct_reorder(county, desc(estimate))) |> 
  ggplot(aes(x = county, y = estimate, fill = variable)) +
  geom_col(position = "dodge") +
  labs(x = "County",
       y = "Population",
       fill = "Continent",
       title = "Hispanic vs Non-Hispanic population in New Mexico",
       subtitle = "Top 10 Counties by Population",
       caption = "Source: census.gov acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_viridis_d(labels = c("Hispanic", "Non Hispanic")) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```

```{r}
hisp_us
```

```{r}
hisp_us |> 
  filter(variable %in% c("Hispanic", "Non_Hispanic")) |> 
  ggplot(aes(x = variable, y = estimate)) +
  geom_col(fill = "cyan", color = "black") +
  labs(x = "County",
       y = "Population",
       title = "Hispanic vs Non-Hispanic population in the US",,
       caption = "Source: census.gov acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_viridis_d(labels = c("Hispanic", "Non Hispanic")) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```

```{r}
measure_vars = c(
  PC_Income = "B19301_001",
  Med_Income = "B19326_001",
  Gini = "B19083_001"
)

measures <- get_acs(
  geography = "county",
  state = "NM",
  variables = measure_vars,
  year = 2023,
  cache_table = TRUE,
) |> 
  left_join(nm_counties,
            by = "GEOID") |> 
  select(GEOID, variable, estimate, moe,
            county = NAME.y, geometry)


hisp |>
  group_by(county) |> 
  select(county, summary_est) |> 
  unique() |> 
  right_join(measures, by = "county") |> 
  filter(county %in% counties_top_8$county & variable == "Gini") |> 
  mutate(county = fct_reorder(county, desc(summary_est))) |> 
  select(c(county, estimate)) |> 
  rename(gini = estimate)
```

```{r}
hisp |>
  group_by(county) |> 
  select(county, summary_est) |> 
  unique() |> 
  right_join(measures, by = "county") |> 
  filter(county %in% counties_top_8$county & variable %in% c("PC_Income", "Med_Income")) |> 
  mutate(county = fct_reorder(county, desc(summary_est))) |> 
  ggplot(aes(x = county, y = estimate, fill = variable)) +
  geom_col(position = "dodge") +
  labs(x = "County",
       y = "Gini Index",
       title = "New Mexico Income",
       subtitle = "Top 10 Counties by Population",
       caption = "Source: census.gov acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_viridis_d(labels = c("Median income", "Per capita income")) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```

```{r eval=FALSE}
v23 <- load_variables(2023, "acs5", cache = TRUE)
View(v23)
```

```{r}
#| eval: false

v18 <- load_variables(2018, "acs5", cache = TRUE)
View(v18)
```

## Racial identity of New Mexicans

Before looking at Hispanics, let's get a sense of the racial identity of New Mexicans. Hispanic is not a racial category, so in this breakdown they can be spread across different races.

As I said, there is an almost overwhelming amount of data available, and the biggest challenge is to figure out what data you need. Aside from the decennial census, the census department does regular surveys called the American Community Surveys, which exist in 1-year and 5-year versions. Within each datasets are hundreds or thousands of variables. To make things worse, variable names are not necessarily consistent from one year to another. Fortunately, `tidycensus` can download all of the variables for a particular year and set in the form of a table, which can be searched and filtered with `View()`. The `load_variables()` function takes a date, and I specify that I want the variables from the 5-year American Community Survey.

```{r}
#| eval: false

v23 <- load_variables(2023, "acs5", cache = TRUE)
View(v23)
```

From this, I will create a vector of the variables, giving them human-readable names. I'll only take the top 4 by population.

```{r}
race_vars = c(
  White = "B02001_002",
  Black = "B02001_003",
  Native_American = "B02001_004",
  Asian = "B02001_005"
)
```

With that, I'm ready to get the data. There are different functions available, depending on the tables you want to query. For the 5-year ACS, the function is `get_acs()`. The function requires a geography, the variables you want returned, and a year. Many geographies are available, including "us", "state", "county" and "tract" (census tract). Some geographies can take an additional argument restricting the data retrieved, as shown in this example where I want county level data, but only for New Mexico.

The `get_acs()` function also has a useful argument, `geometry = TRUE`, which adds the geometry and returns an `sf` object, which we need for mapping. Unfortunately, as of this writing I am unable to get it to work with county or state, although is does work for tract-level data. So we have to do a little extra processing, nothing terrible. I got the geometries from the `tigris` package like this:

31b8e172-b470-440e-83d8-e6b185028602:dAB5AHAAZQA6AE8AUQBCAGoAQQBHAEkAQQBOAHcAQQA1AEEARwBVAEEATgBnAEIAagBBAEMAMABBAE8AQQBBADQAQQBEAGcAQQBaAEEAQQB0AEEARABRAEEAWQBRAEEAdwBBAEcAVQBBAEwAUQBBADUAQQBHAE0AQQBPAFEAQgBpAEEAQwAwAEEAWgBnAEIAbQBBAEQAWQBBAE4AdwBCAGoAQQBHAFEAQQBOAEEAQQB3AEEARABRAEEAWgBRAEEAMgBBAEQAQQBBAAoAcABvAHMAaQB0AGkAbwBuADoATQBnAEEAeQBBAEQASQBBAE0AZwBBAD0ACgBwAHIAZQBmAGkAeAA6AAoAcwBvAHUAcgBjAGUAOgBZAEEAQgBnAEEARwBBAEEAZQB3AEIANwBBAEgASQBBAGYAUQBCADkAQQBBAG8AQQBiAGcAQgB0AEEARgA4AEEAWQB3AEIAdgBBAEgAVQBBAGIAZwBCADAAQQBHAGsAQQBaAFEAQgB6AEEAQwBBAEEAUABBAEEAdABBAEMAQQBBAFkAdwBCAHYAQQBIAFUAQQBiAGcAQgAwAEEARwBrAEEAWgBRAEIAegBBAEMAZwBBAEkAZwBCAE8AQQBFADAAQQBJAGcAQQBwAEEAQwBBAEEAZgBBAEEAKwBBAEMAQQBBAEMAZwBBAGcAQQBDAEEAQQBJAEEAQQBnAEEASABNAEEAWgBRAEIAcwBBAEcAVQBBAFkAdwBCADAAQQBDAGcAQQBSAHcAQgBGAEEARQA4AEEAUwBRAEIARQBBAEMAdwBBAEkAQQBCAGoAQQBHADgAQQBkAFEAQgB1AEEASABRAEEAZQBRAEEAZwBBAEQAMABBAEkAQQBCAE8AQQBFAEUAQQBUAFEAQgBGAEEAQwB3AEEASQBBAEIAbgBBAEcAVQBBAGIAdwBCAHQAQQBHAFUAQQBkAEEAQgB5AEEASABrAEEASwBRAEEASwBBAEcAQQBBAFkAQQBCAGcAQQBBAD0APQAKAHMAdQBmAGYAaQB4ADoA:31b8e172-b470-440e-83d8-e6b185028602 The `GEOID` is what will allow us to join the geometries to the data frame returned by `get_acs()`. I also need to turn it into an `sf` object in order to map it.

```{r}
races <- get_acs(
  geography = "county",
  state = "NM",
  variables = race_vars,
  summary_var = "B02001_001",
  year = 2023,
  cache_table = TRUE) |> 
  select(-moe, -summary_moe) |> 
  pivot_wider(names_from = variable, values_from = estimate) |> 
  left_join(nm_counties, by = "GEOID")  |> 
  st_as_sf()
```

Let's see the overall picture. Since this is a histogram, I'll drop the geometry column. I'll use `transpose()` from `data.table` so I can feed it to `ggplot`.

```{r}
races |> 
  summarise(
    White = sum(White), 
    Native = sum(Native_American),
    Asian = sum(Asian),
    Black = sum(Black)
  ) |> 
  st_drop_geometry() |> 
  data.table::transpose(keep.names = "race") |> 
  mutate(race = fct_reorder(race, desc(V1))) |> 
  ggplot(aes(x = race, y = V1)) +
  geom_col(fill = "cyan", color = "grey50") +
  labs(
    title = "Racial identities in New Mexico",
    x = "Race", y = "Population",
    caption = "Source: acs5 2023"
  ) +
  scale_y_continuous(labels = scales::comma) +
  theme_gray()
```

```{r}
counties_top_8 <- get_acs(
  geography = "county",
  state = "NM",
  variables = "B03001_001",
  year = 2023,
  cache_table = TRUE) |> 
  slice_max(order_by = estimate, n = 8) |> 
  left_join(nm_counties, by = "GEOID") |> 
  select(county)
```

```{r}
races |> 
  filter(county %in% counties_top_8$county) |> 
  select(-GEOID, -NAME) |> 
  pivot_longer(cols = White:Asian, names_to = "variable", values_to = "estimate", values_drop_na = T) |> 
  mutate(county = fct_reorder(county, desc(estimate))) |> 
  ggplot(aes(x = county, y = estimate, fill = variable)) +
  geom_col() +
  labs(x = "County",
       y = "Population",
       fill = "Race",
       title = "New Mexico population by race",
       subtitle = "Top 8 Counties by Population",
       caption = "Source: census.gov acs5 2023") +
  scale_y_continuous(labels = scales::comma) +
  scale_fill_viridis_d(labels = c("Asian", "Black",
                                  "Native American", "White")) +
  theme_gray() +
  theme(axis.text.x = element_text(angle = 30))
```
